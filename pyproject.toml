[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "audio-fx"
version = "0.1.0"
description = "A Python tool for applying voice effects and processing audio recordings"
authors = ["RMN <no-reply@mail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "audio_fx" }]

[tool.poe.tasks]
ruff-check = "poetry run ruff check ./"
black-check = "poetry run black --check --config pyproject.toml ./"
mypy-check = "poetry run mypy --config-file pyproject.toml ./"
ruff-format = "poetry run ruff format ./"
black-format = "poetry run black --config pyproject.toml ./"
check = ["ruff-check", "black-check"]
hard-check = ["check", "mypy-check"]
format = ["ruff-format", "black-format"]
test = "poetry run pytest"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
pydantic-settings = "^2.9.1"
torch = {url = "https://download.pytorch.org/whl/cu118/torch-2.7.0%2Bcu118-cp312-cp312-win_amd64.whl"}
whisperx = {git = "https://github.com/m-bain/whisperX.git", rev = "v3.3.2"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-env = "^1.1.5"
ruff = "^0.11.5"
black = "^25.1.0"
poethepoet = "^0.33.1"
mypy = "^1.15.0"

[tool.ruff]
lint.select = []
lint.ignore = []
exclude = [
    ".git",
    ".github",
    ".idea",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "venv",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
target-version = ["py312"]
color = true
line-length = 120
exclude = '''
/(
    \.git
    | \.github
    | \.idea
    | \.mypy_cache
    | \.ruff_cache
    | \.venv
    | build
    | venv
)/
'''

[tool.mypy]
python_version = 3.12
color_output = true
ignore_missing_imports = true

[tool.pytest.ini_options]
env = []
norecursedirs = [
    ".git",
    ".github",
    ".idea",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "venv"
]
testpaths = ["tests"]
addopts = [
    "--strict-markers",
    "--doctest-modules",
    "--doctest-continue-on-failure"
]
